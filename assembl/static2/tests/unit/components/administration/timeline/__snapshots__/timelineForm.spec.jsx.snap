// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TimelineForm component should render a form to create, delete and edit the title of the phases 1`] = `
<div
  className="admin-box timeline-admin"
>
  <SectionTitle
    annotation="This module has to be filled. * Fields are required"
    title="Edition of the phases"
  />
  <Translate
    className="admin-instruction"
    value="administration.timelineAdmin.instruction1"
  />
  <div
    className="admin-content"
  >
    <div
      className="form-container"
    >
      <form>
        <Connect(DumbPhaseTitleForm)
          editLocale="fr"
          id="123"
          numberOfPhases={3}
          phaseIndex={1}
        />
        <Connect(DumbPhaseTitleForm)
          editLocale="fr"
          id="345"
          numberOfPhases={3}
          phaseIndex={2}
        />
        <Connect(DumbPhaseTitleForm)
          editLocale="fr"
          id="456"
          numberOfPhases={3}
          phaseIndex={3}
        />
        <OverlayTrigger
          defaultOverlayShown={false}
          overlay={
            <Tooltip
              bsClass="tooltip"
              id="addPhaseTooltip"
              placement="right"
            >
              <Translate
                value="administration.timelineAdmin.addPhase"
              />
            </Tooltip>
          }
          placement="top"
          trigger={
            Array [
              "hover",
              "focus",
            ]
          }
        >
          <div
            className="plus margin-s"
            onClick={[Function]}
          >
            +
          </div>
        </OverlayTrigger>
      </form>
    </div>
  </div>
  <Translate
    className="admin-instruction"
    value="administration.timelineAdmin.instruction2"
  />
  <TabbedContent
    bodyRowClassName=""
    divClassName="admin-content"
    renderBody={[Function]}
    renderTooltip={[Function]}
    tabTitleMsgId="administration.timelineAdmin.phase"
    tabs={
      Array [
        Object {
          "id": "123",
          "title": "Phase 1",
        },
        Object {
          "id": "345",
          "title": "Phase 2",
        },
        Object {
          "id": "456",
          "title": "Phase 3",
        },
      ]
    }
    type="phase"
  />
  <Connect(DumbManageTimeline) />
</div>
`;
