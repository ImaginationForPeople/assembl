// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ManageModules component should render a form to manage the landing page modules 1`] = `
<div
  className="admin-box"
>
  <SectionTitle
    annotation="* Fields are required."
    title="Manage the modules"
  />
  <div
    className="admin-content form-container"
    style={
      Object {
        "maxWidth": "700px",
      }
    }
  >
    <p
      className="admin-paragraph"
    >
      <Translate
        value="administration.landingPage.manageModules.helper"
      />
    </p>
    <div
      className="two-columns-admin"
    >
      <div
        className="column-left"
      >
        <DumbSelectModulesForm
          lang="fr"
          moduleTypes={
            Array [
              Object {
                "identifier": "HEADER",
                "moduleId": "abc123",
                "required": true,
                "title": "Header",
              },
              Object {
                "identifier": "INTRODUCTION",
                "moduleId": "def456",
                "required": false,
                "title": "Introduction",
              },
              Object {
                "identifier": "VIDEO",
                "moduleId": "ghi789",
                "required": false,
                "title": "Video",
              },
              Object {
                "identifier": "FOOTER",
                "moduleId": "jkl865",
                "required": true,
                "title": "Footer",
              },
            ]
          }
          toggleModule={[MockFunction]}
        />
        <div
          className="margin-xl"
        >
          <AddModuleButton
            allDuplicatesAreChecked={false}
            buttonTitleTranslationKey="textAndMultimediaBtn"
            createModule={[MockFunction]}
            numberOfDuplicatesModules={1}
            numberOfEnabledModules={3}
          />
        </div>
      </div>
      <div
        className="column-right"
      >
        <ModulesPreview
          modules={
            Immutable.List [
              Immutable.Map {
                "enabled": true,
                "id": "abc123",
                "moduleType": Immutable.Map {
                  "moduleId": "abc123",
                  "editableOrder": false,
                  "identifier": "HEADER",
                  "required": true,
                  "title": "Header",
                },
                "order": 1,
              },
              Immutable.Map {
                "enabled": true,
                "id": "ghi789",
                "moduleType": Immutable.Map {
                  "moduleId": "ghi789",
                  "editableOrder": true,
                  "identifier": "VIDEO",
                  "title": "Video",
                },
                "order": 5,
              },
              Immutable.Map {
                "enabled": true,
                "id": "jkl865",
                "moduleType": Immutable.Map {
                  "moduleId": "jkl865",
                  "editableOrder": false,
                  "identifier": "FOOTER",
                  "required": true,
                  "title": "Footer",
                },
                "order": 99,
              },
            ]
          }
          moveModuleDown={[MockFunction]}
          moveModuleUp={[MockFunction]}
        />
      </div>
    </div>
  </div>
</div>
`;
